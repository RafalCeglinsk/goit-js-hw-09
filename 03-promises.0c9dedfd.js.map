{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAIpCC,eAAeC,EAAcC,EAAUC,GACrC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbN,EAAKa,iBAAiB,UAetBV,eAA4BW,GAC1BA,EAAEC,iBAEF,MAAMC,EAAeC,SAASjB,EAAKkB,SAASZ,MAAMa,OAC5CC,EAAOH,SAASjB,EAAKkB,SAASE,KAAKD,OACnCE,EAASJ,SAASjB,EAAKkB,SAASG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMjB,EAAWiB,EAAI,EACfC,EAAeP,EAAeI,EAAOE,EAE3C,IACE,MAAME,QAAepB,EAAcC,EAAUkB,GAC7CE,EAAA3B,GAAS4B,OAAOC,QACd,qBAAqBH,EAAOnB,eAAemB,EAAOlB,W,CAEpD,MAAOsB,GACPH,EAAA3B,GAAS4B,OAAOG,QACd,oBAAoBD,EAAMvB,eAAeuB,EAAMtB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nasync function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nasync function handleSubmit(e) {\n  e.preventDefault();\n\n  const initialDelay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const currentDelay = initialDelay + step * i;\n\n    try {\n      const result = await createPromise(position, currentDelay);\n      Notiflix.Notify.success(\n        `Fulfilled promise ${result.position} in ${result.delay} ms`\n      );\n    } catch (error) {\n      Notiflix.Notify.failure(\n        `Rejected promise ${error.position} in ${error.delay} ms`\n      );\n    }\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","async","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","initialDelay","parseInt","elements","value","step","amount","i","currentDelay","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.0c9dedfd.js.map"}